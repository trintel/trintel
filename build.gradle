plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.palantir.git-version' version '3.0.0'
	id 'java'
    id "com.diffplug.spotless" version "6.3.0"
}

group = '.'
version = gitVersion()
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-security' // das hier macht login screen und co
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.webjars:bootstrap:5.2.2'
	implementation 'org.webjars.npm:bootstrap-icons:1.8.1'
	implementation 'org.webjars:jquery:3.6.1'
	implementation 'com.itextpdf:itextpdf:5.0.6'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.mockito:mockito-core:4.5.1'
	implementation 'net.bytebuddy:byte-buddy:1.12.10'
	implementation 'net.bytebuddy:byte-buddy-agent:1.12.10'

  implementation 'org.apache.poi:poi:5.2.3' // For basic POI (for Word, PowerPoint, etc.)
  implementation 'org.apache.poi:poi-ooxml:5.2.3' // For Excel (XLSX format support)

	// runtimeOnly 'mysql:mysql-connector-java'
	//JUnit Tests
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

tasks.named('test') {
	useJUnitPlatform()
}

task writeVersion {
    doLast {
        def versionFile = file("${projectDir}/src/main/resources/build-info.properties")
        versionFile.text = "app.version=${project.version}"
    }
}
processResources.dependsOn writeVersion

test {
    useJUnitPlatform()
}

spotless {
  java {
    importOrder('java', 'javax', 'org', 'sopro', '')
    removeUnusedImports()
    indentWithSpaces(4)
    trimTrailingWhitespace()
    endWithNewline()

    custom 'Remove commented-out import statements', {
      it.replaceAll(/\n\/\/ import .*?;.*/, '')
    }
  }
}
